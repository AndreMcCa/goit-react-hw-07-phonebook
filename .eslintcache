[{"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\index.js":"1","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\App.js":"2","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\store.js":"3","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-actions.js":"4","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-reducer.js":"5","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\ContactForm.js":"6","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\Input\\Input.js":"7","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactList\\ContactList.js":"8","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-types.js":"9","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactList\\Contact\\Contact.js":"10","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-operation.js":"11","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-selectors.js":"12"},{"size":492,"mtime":1612664174054,"results":"13","hashOfConfig":"14"},{"size":885,"mtime":1612661886775,"results":"15","hashOfConfig":"14"},{"size":982,"mtime":1612664235641,"results":"16","hashOfConfig":"14"},{"size":847,"mtime":1612664381112,"results":"17","hashOfConfig":"14"},{"size":1274,"mtime":1612657632271,"results":"18","hashOfConfig":"14"},{"size":1918,"mtime":1612661989543,"results":"19","hashOfConfig":"14"},{"size":473,"mtime":1612643632627,"results":"20","hashOfConfig":"14"},{"size":700,"mtime":1612662200612,"results":"21","hashOfConfig":"14"},{"size":261,"mtime":1612664256598,"results":"22","hashOfConfig":"14"},{"size":425,"mtime":1612643632631,"results":"23","hashOfConfig":"14"},{"size":1119,"mtime":1612657862393,"results":"24","hashOfConfig":"14"},{"size":417,"mtime":1612663611297,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mhymzl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\index.js",[],["54","55"],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\App.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\store.js",["56","57"],"import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { \r\n  persistStore, \r\n  persistReducer, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from 'redux-persist'\r\n// import storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\n\r\nimport contactsReducer from './contacts-reducer';\r\n\r\n// const initialState = {\r\n//    contacts: {\r\n//     items: [],\r\n//     filter: ''\r\n//   }\r\n// };\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n  }\r\n}), logger];\r\n\r\nconst rootReduscer = combineReducers({\r\n  contacts: contactsReducer\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n   reducer: rootReduscer,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n   middleware,\r\n})\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default {persistor, store};\r\n\r\nexport default store","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-actions.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-reducer.js",["58"],"import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n    addContactSuccess, \r\n    addContactRequest, \r\n    addContactError, \r\n    deleteContactSuccess, \r\n    deleteContactError, \r\n    deleteContactRequest,\r\n    fetchContactRequest, \r\n    fetchContactError, \r\n    fetchContactSuccess, \r\n    filterContact} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [fetchContactSuccess]: (_, action) => action.payload,\r\n    [addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [deleteContactSuccess]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n})\r\n\r\nconst filterReducer = createReducer('', {\r\n    [filterContact]: (_, action) => action.payload\r\n})\r\n\r\nconst loading = createReducer(false, \r\n    {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n   items: itemsReducer,\r\n   filter: filterReducer,\r\n})\r\n\r\n","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\ContactForm.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\Input\\Input.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactList\\ContactList.js",["59"],"import {useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\n\r\nimport Contact from \"./Contact/Contact\";\r\nimport { fetchContact, deleteContact} from '../../redux/contacts-operation';\r\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\r\n\r\nexport default function ContactsList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(state => getVisibleContacts(state));\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContact())\r\n    }, [])\r\n\r\n    return (\r\n        <ul>\r\n            {contacts.map(contact => (<Contact key={contact.id} contact={contact} onDelete={() => dispatch(deleteContact(contact.id))}/>))}\r\n      </ul>\r\n    )\r\n}\r\n","X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-types.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\components\\ContactList\\Contact\\Contact.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-operation.js",[],"X:\\Clone GitHub\\React\\goit-react-hw-07-phonebook\\src\\redux\\contacts-selectors.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":3,"nodeType":"66","messageId":"67","endLine":4,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":5,"column":3,"nodeType":"66","messageId":"67","endLine":5,"endColumn":17},{"ruleId":"64","severity":1,"message":"69","line":26,"column":7,"nodeType":"66","messageId":"67","endLine":26,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":15,"column":8,"nodeType":"72","endLine":15,"endColumn":10,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'persistStore' is defined but never used.","Identifier","unusedVar","'persistReducer' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [dispatch]",{"range":"79","text":"80"},[501,503],"[dispatch]"]